version: "3.9"

services:
  nginx:
    volumes:
      - ./proxy/assets:/var/www/assets
      - ./proxy/gateway/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/gateway/etc/nginx/conf/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
      - ./proxy/gateway/etc/nginx/conf/mime.types:/etc/nginx/mime.types:ro
      - ./proxy/gateway/etc/nginx/conf/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./proxy/gateway/etc/nginx/logs:/etc/nginx/logs
      #- ./proxy/gateway/etc/nginx/conf:/etc/nginx/conf
      #- ./proxy/gateway/etc/nginx/conf.d:/etc/nginx/conf.d
      #- ./proxy/gateway/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./proxy/gateway/etc/nginx/conf.d/conf:/etc/nginx/conf.d/conf
      #- ./proxy/gateway/etc/nginx/templates:/etc/nginx/templates
      #- ./proxy/static-html-directory:/usr/share/nginx/html
      #- ./proxy/logs-directory:/var/log/nginx
      #- $(pwd)/proxy/read-only/nginx-cache:/var/cache/nginx
      #- $(pwd)/proxy/read-only/nginx-pid:/var/run
    environment:
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
      - NGINX_PORT=80
      #- NGINX_HOST=localhost
    # The exec form is parsed as a JSON array,
    # which means that you must use double-quotes (“)
    # around words not single-quotes (‘).
    #command: [ "sh", "-c", "nginx", "-g", "daemon off;" ]
    #command: nginx -g 'daemon off;'
    command: [ "nginx", "-g", "daemon off;" ]
    ports:
      - "0.0.0.0:8080:80/tcp"
    expose:
      - "80"

  postgres:
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    expose:
      - "5432"

  pgadmin4:
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "8001:80"
    expose:
      - "8080"

  redis:
    ports:
      - "6380:6379"
    expose:
      - "6379"

  identityserver:
    build:
      network: host
      context: ../.
      dockerfile: ./IdentityServer/IdentityServer/Dockerfile.prod
      cache_from:
        - mcr.microsoft.com/dotnet/aspnet:6.0-alpine
        - mcr.microsoft.com/dotnet/sdk:6.0-alpine
      labels:
        - "project=iStore_IdentityServer"
    labels:
      project: "iStore_IdentityServer"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:5002
      - App__BasePath=/identity
      - App__BasketApi=http://host.docker.internal:5003
      - App__CatalogApi=http://host.docker.internal:5000
      - App__GlobalUrl=http://host.docker.internal:8080
      - App__IdentityUrl=http://host.docker.internal:5002
      - App__SpaUrl=http://host.docker.internal:5001
      - App__HttpLoggint=false
      - Nginx__UseNginx=false
      - Nginx__UseInitFile=true
      - Nginx__UseUnixSocket=false
      - Nginx__UsePort=false
      - Nginx__InitFilePath=/tmp/app-initialized
      - Nginx__UnixSocketPath=/tmp/nginx.socket
      - Nginx__Port=
    ports:
      - "5002:5002"
    expose:
      - "5002"

  catalog.api:
    build:
      network: host
      context: ../.
      dockerfile: ./Catalog/Catalog.Host/Dockerfile.prod
      cache_from:
        - mcr.microsoft.com/dotnet/aspnet:6.0-alpine
        - mcr.microsoft.com/dotnet/sdk:6.0-alpine
      labels:
        - "project=iStore_Catalog.Host"
    labels:
      project: "iStore_Catalog.Host"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:5000
      - App__BasePath=/catalog
      - App__BaseUrl=http://host.docker.internal:5000
      - App__GlobalUrl=http://host.docker.internal:8080
      - App__SpaUrl=http://host.docker.internal:5001
      - App__HttpLoggint=false
      - Authorization__Authority=http://host.docker.internal:5002
      - Authorization__SiteAudience=host.docker.internal
      - Catalog__CdnHost=http://host.docker.internal:8080
      - Catalog__ImgUrl=assets/images
      - Client__Id=catalog
      - Client__Secret=secret
      - Database__ConnectionString=server=host.docker.internal;port=5433;database=catalog;uid=postgres;password=postgres;
      - Database__EnvVar=
      - Nginx__UseNginx=false
      - Nginx__UseInitFile=true
      - Nginx__UseUnixSocket=false
      - Nginx__UsePort=false
      - Nginx__InitFilePath=/tmp/app-initialized
      - Nginx__UnixSocketPath=/tmp/nginx.socket
      - Nginx__Port=
    ports:
      - "5000:5000"
    expose:
      - "5000"

  basket.api:
    build:
      network: host
      context: ../.
      dockerfile: ./Basket/Basket.Host/Dockerfile.prod
      cache_from:
        - mcr.microsoft.com/dotnet/aspnet:6.0-alpine
        - mcr.microsoft.com/dotnet/sdk:6.0-alpine
      labels:
        - "project=iStore_Basket.Host"
    labels:
      project: "iStore_Basket.Host"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:5003
      - App__BasePath=/basket
      - App__BaseUrl=http://host.docker.internal:5003
      - App__GlobalUrl=http://host.docker.internal:8080
      - App__SpaUrl=http://host.docker.internal:5001
      - App__HttpLoggint=false
      - Authorization__Authority=http://host.docker.internal:5002
      - Authorization__SiteAudience=host.docker.internal
      - Client__Id=basket
      - Client__Secret=secret
      - Redis__CacheTimeout=48:00:00
      - Redis__ConnectionString=host.docker.internal:6380
      - Redis__EnvVar=
      - Nginx__UseNginx=false
      - Nginx__UseInitFile=true
      - Nginx__UseUnixSocket=false
      - Nginx__UsePort=false
      - Nginx__InitFilePath=/tmp/app-initialized
      - Nginx__UnixSocketPath=/tmp/nginx.socket
      - Nginx__Port=
    ports:
      - "5003:5003"
    expose:
      - "5003"

  web.client:
    build:
      network: host
      context: ../Web/Web.Client/.
      dockerfile: ./Dockerfile.prod
      target: prod
      cache_from:
        - node:alpine
      labels:
        - "project=iStore_Web.Client"
    labels:
      project: "iStore_Web.Client"
    volumes:
      - ../Web/Web.Client/public:/app/public
      - ../Web/Web.Client/src:/app/src
    env_file:
      - ../Web/Web.Client/.env.docker.prod
    environment:
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    ports:
      - "5001:5001"
    expose:
      - "5001"
